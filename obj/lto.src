	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_init
_init:
	ld	hl, 4718592
	ld	a, 66
	ld	iy, _playerAngle
	ld	(_playerX), hl
	ld	(_playerX+3), a
	ld	(_playerY), hl
	ld	(_playerY+3), a
	ld	de, (_playerAngle)
	lea	hl, iy + 3
	ld	l, (hl)
	push	hl
	push	de
	call	_cos
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	(_playerDeltaX), bc
	ld	(_playerDeltaX+3), a
	ld	hl, (_playerAngle)
	ld	a, (_playerAngle+3)
	ld	e, a
	push	de
	push	hl
	call	_sin
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	(_playerDeltaY), bc
	ld	(_playerDeltaY+3), a
	ld	hl, 20
	push	hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetTextConfig
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_step
_step:
	ld	hl, -6
	call	__frameset
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	1, a
	ld	iy, _playerAngle
	lea	hl, iy + 3
	ld	(ix - 3), hl
	jp	z, BB1_9
	ld	e, -67
	ld	bc, (_playerAngle)
	ld	hl, (ix - 3)
	ld	a, (hl)
	ld	hl, -3355443
	call	__fadd
	push	bc
	pop	iy
	lea	hl, iy
	ld	(ix - 6), a
	ld	e, a
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jp	m, BB1_3
	ld	d, 0
	jr	BB1_4
BB1_3:
	ld	d, 1
BB1_4:
	lea	bc, iy
	ld	a, (ix - 6)
	ld	hl, -3600421
	ld	e, 64
	call	__fadd
	bit	0, d
	jr	nz, BB1_6
	lea	bc, iy
BB1_6:
	bit	0, d
	jr	nz, BB1_8
	ld	a, (ix - 6)
BB1_8:
	ld	(_playerAngle), bc
	ld	hl, (ix - 3)
	ld	(hl), a
	ld	l, a
	push	hl
	push	bc
	call	_cos
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	(_playerDeltaX), bc
	ld	(_playerDeltaX+3), a
	ld	hl, (_playerAngle)
	ld	a, (_playerAngle+3)
	ld	e, a
	push	de
	push	hl
	call	_sin
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	(_playerDeltaY), bc
	ld	(_playerDeltaY+3), a
BB1_9:
	ld	iy, _playerX
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	2, a
	jp	z, BB1_18
	ld	e, 61
	ld	bc, (_playerAngle)
	ld	hl, (ix - 3)
	ld	a, (hl)
	ld	hl, -3355443
	call	__fadd
	push	bc
	pop	iy
	ld	hl, -3600421
	ld	e, 64
	ld	(ix - 6), a
	call	__fcmp
	jp	m, BB1_12
	ld	d, 0
	jr	BB1_13
BB1_12:
	ld	d, 1
BB1_13:
	lea	bc, iy
	ld	a, (ix - 6)
	ld	hl, -3600421
	ld	e, -64
	call	__fadd
	bit	0, d
	jr	nz, BB1_15
	lea	bc, iy
BB1_15:
	bit	0, d
	jr	nz, BB1_17
	ld	a, (ix - 6)
BB1_17:
	ld	(_playerAngle), bc
	ld	hl, (ix - 3)
	ld	(hl), a
	ld	l, a
	push	hl
	push	bc
	call	_cos
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	(_playerDeltaX), bc
	ld	(_playerDeltaX+3), a
	ld	hl, (_playerAngle)
	ld	a, (_playerAngle+3)
	ld	e, a
	push	de
	push	hl
	call	_sin
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	(_playerDeltaY), bc
	ld	(_playerDeltaY+3), a
	ld	iy, _playerX
BB1_18:
	ld.sis	bc, 1
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	lea	hl, iy + 3
	ld	(ix - 3), hl
	ld	iy, _playerY
	lea	hl, iy + 3
	ld	(ix - 6), hl
	jr	z, BB1_20
	ld	bc, (_playerDeltaX)
	ld	a, (_playerDeltaX+3)
	ld	hl, (_playerX)
	ld	iy, (ix - 3)
	ld	e, (iy)
	call	__fadd
	ld	(_playerX), bc
	ld	(_playerX+3), a
	ld	bc, (_playerDeltaY)
	ld	a, (_playerDeltaY+3)
	ld	hl, (_playerY)
	ld	iy, (ix - 6)
	ld	e, (iy)
	call	__fadd
	ld	(_playerY), bc
	ld.sis	bc, 1
	ld	(_playerY+3), a
BB1_20:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	call	__sand
	bit	0, l
	jr	z, BB1_22
	ld	hl, (_playerDeltaX)
	ld	a, (_playerDeltaX+3)
	ld	e, a
	ld	bc, (_playerX)
	ld	iy, (ix - 3)
	ld	a, (iy)
	call	__fsub
	ld	(_playerX), bc
	ld	(_playerX+3), a
	ld	hl, (_playerDeltaY)
	ld	a, (_playerDeltaY+3)
	ld	e, a
	ld	bc, (_playerY)
	ld	iy, (ix - 6)
	ld	a, (iy)
	call	__fsub
	ld	(_playerY), bc
	ld	(_playerY+3), a
BB1_22:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jr	z, BB1_24
	ld	a, 0
	jr	BB1_25
BB1_24:
	ld	a, -1
BB1_25:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawMap2D
_drawMap2D:
	ld	hl, -6
	call	__frameset
	ld	iy, 0
BB2_1:
	ld	bc, (_mapY)
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	nc, BB2_8
	ld	de, 0
BB2_3:
	ld	bc, (_mapX)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB2_7
	ld	(ix - 3), iy
	lea	hl, iy
	call	__imulu
	push	hl
	pop	bc
	ld	(ix - 6), de
	ex	de, hl
	add	hl, bc
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _map
	add	hl, de
	ld	hl, (hl)
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	hl, -1
	jr	z, BB2_6
	ld	hl, 0
BB2_6:
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, (_mapSize)
	push	de
	pop	hl
	ld	bc, (ix - 6)
	call	__imulu
	push	hl
	pop	iy
	push	de
	pop	hl
	ld	bc, (ix - 3)
	call	__imulu
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	ld	de, (ix - 6)
	ld	iy, (ix - 3)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	inc	de
	jr	BB2_3
BB2_7:
	inc	iy
	jp	BB2_1
BB2_8:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawPlayer
_drawPlayer:
	ld	hl, -10
	call	__frameset
	ld	hl, -25
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, (_playerX)
	ld	iy, _playerX
	lea	hl, iy + 3
	ld	a, (hl)
	call	__ftol
	push	bc
	pop	de
	ld	bc, (_playerY)
	ld	iy, _playerY
	lea	hl, iy + 3
	ld	a, (hl)
	call	__ftol
	ld	hl, 4
	push	hl
	push	bc
	push	de
	call	_gfx_FillCircle
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (_playerX)
	ld	a, (_playerX+3)
	ld	d, a
	lea	bc, iy
	call	__ftol
	ld	(ix - 3), bc
	ld	bc, (_playerY)
	ld	(ix - 9), bc
	ld	a, (_playerY+3)
	ld	(ix - 10), a
	call	__ftol
	ld	(ix - 6), bc
	ld	bc, (_playerDeltaX)
	ld	a, (_playerDeltaX+3)
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	call	__ftol
	push	bc
	pop	iy
	ld	bc, (_playerDeltaY)
	ld	a, (_playerDeltaY+3)
	ld	hl, -6291456
	ld	e, 64
	call	__fmul
	ld	hl, (ix - 9)
	ld	e, (ix - 10)
	call	__fadd
	call	__ftol
	push	bc
	push	iy
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_Line
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw
_draw:
	ld	hl, 16
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_drawMap2D
	jp	_drawPlayer
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	call	_init
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB5_1:
	call	_step
	bit	0, a
	jr	z, BB5_3
	ld	a, (_partialRedraw)
	bit	0, a
	ld	hl, 0
	push	hl
	call	nz, _gfx_Blit
	pop	hl
	call	_draw
	call	_gfx_SwapDraw
	jr	BB5_1
BB5_3:
	jp	_gfx_End
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	public	_mapX
_mapX:
	dl	8

	section	.data,"aw",@progbits
	public	_mapY
_mapY:
	dl	8

	section	.data,"aw",@progbits
	public	_mapSize
_mapSize:
	dl	16

	section	.data,"aw",@progbits
	public	_map
_map:
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	0
	dl	1
	dl	0
	dl	0
	dl	0
	dl	0
	dl	1
	dl	1
	dl	0
	dl	1
	dl	0
	dl	0
	dl	0
	dl	0
	dl	1
	dl	1
	dl	0
	dl	1
	dl	0
	dl	0
	dl	0
	dl	0
	dl	1
	dl	1
	dl	0
	dl	0
	dl	0
	dl	0
	dl	0
	dl	0
	dl	1
	dl	1
	dl	0
	dl	0
	dl	0
	dl	0
	dl	1
	dl	0
	dl	1
	dl	1
	dl	0
	dl	0
	dl	0
	dl	0
	dl	0
	dl	0
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1
	dl	1

	section	.bss,"aw",@nobits
	public	_playerX
_playerX:
	rb	4

	section	.bss,"aw",@nobits
	public	_playerY
_playerY:
	rb	4

	section	.bss,"aw",@nobits
	public	_playerAngle
_playerAngle:
	rb	4

	section	.bss,"aw",@nobits
	public	_playerDeltaX
_playerDeltaX:
	rb	4

	section	.bss,"aw",@nobits
	public	_playerDeltaY
_playerDeltaY:
	rb	4

	section	.bss,"aw",@nobits
	public	_partialRedraw
_partialRedraw:
	rb	1

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6c61664110f888c0285ae4c48b150c9a7a4361bb)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_sin
	extern	__fadd
	extern	_kb_Scan
	extern	_gfx_Line
	extern	_gfx_Begin
	extern	__sand
	extern	__fmul
	extern	__ftol
	extern	_gfx_SwapDraw
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_SetTextConfig
	extern	_gfx_End
	extern	_gfx_FillCircle
	extern	_cos
	extern	_gfx_SetTextXY
	extern	__fcmp
	extern	__fsub
